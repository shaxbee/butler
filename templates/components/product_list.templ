package components

import (
	"strconv"
	"github.com/shaxbee/butler/product"
)

type categoryProducts struct {
	CategoryID int64
	CategoryName string
	Products []product.Product
}

func CategoryProducts(products []product.Product) []categoryProducts {
	if len(products) == 0 {
		return nil
	}

	category := func(p product.Product) categoryProducts {
		return categoryProducts{
			CategoryID: p.CategoryID,
			CategoryName: p.CategoryName,
			Products: []product.Product{p},
		}
	}

	res := []categoryProducts{category(products[0])}
	for _, p := range products[1:] {
		i := len(res)-1
		switch {
		case p.CategoryID != res[i].CategoryID:
			res = append(res, category(p))
		default:
			res[i].Products = append(res[i].Products, p)
		}
	}

	return res
}

templ ProductList(products []product.Product) {
    <table class="relative w-full border">
    for _, cp := range CategoryProducts(products) {
        <tr>
            <th colspan="3" class="sticky top-0 p-4 bg-slate-300 text-left text-lg font-lora italic">{cp.CategoryName}</th>
        </tr>
        @ProductRows(cp.Products)
    }
    </table>
}

templ ProductRows(products []product.Product) {
	for _, p := range products {
		<tr class="p-2">
			<td class="px-5">
				<!-- name -->
				<p class="text-lg font-lora italic">{ p.Name }</p>
			</td>
			<!-- description -->
			<td>
				<p class="text-md font-lora italic text-gray-700">{ p.Description }</p>
			</td>
			<td class="flex flex-row justify-end items-center space-x-2">
				<!-- price  -->
				if p.DiscountedPrice.IsZero() {
					<span class="text-md font-lora italic text-black">{ p.Price.String() }</span>
				} else {
					<del class="text-sm font-lora italic text-gray-700">{ p.Price.String() }</del>
					<span class="text-md font-lora italic text-black">{ p.DiscountedPrice.String() }</span>
				}
				<!-- add to cart -->
				<form>
					<input type="hidden" name="product_id" value={strconv.FormatInt(p.ID, 10)} />
					<button hx-post="/cart" hx-swap="none" class="p-2 text-gray-700">
						<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 hover:scale-125 transition duration-300">
							<path stroke-linecap="round" stroke-linejoin="round" d="M12 9v6m3-3H9m12 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"></path>
						</svg>
					</button>
				</form>
			</td>
		</tr>
	}
}
